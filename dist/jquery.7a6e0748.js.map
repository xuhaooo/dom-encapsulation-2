{"version":3,"sources":["jquery.js"],"names":["log","console","bind","window","jQuery","selectorOrArray","elements","document","querySelectorAll","Array","addClass","className","i","length","classList","add","find","selector","array","elements2","from","concat","newApi"],"mappings":"AAAA,IAAMA,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,IAAZ,CAAiBD,OAAjB,CAAZ;;AAEAE,MAAM,CAACC,MAAP,GAAgB,UAAUC,eAAV,EAA2B;AACvC,MAAIC,QAAJ;;AACA,MAAG,OAAOD,eAAP,KAA2B,QAA9B,EAAuC;AACnCC,IAAAA,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0BH,eAA1B,CAAX;AACH,GAFD,MAEO,IAAGA,eAAe,YAAYI,KAA9B,EAAoC;AACvCH,IAAAA,QAAQ,GAAGD,eAAX;AACH;;AACD,SAAO;AACHK,IAAAA,QADG,oBACMC,SADN,EACgB;AACf,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,QAAQ,CAACO,MAAvB,EAA8BD,CAAC,EAA/B,EAAkC;AAC9BN,QAAAA,QAAQ,CAACM,CAAD,CAAR,CAAYE,SAAZ,CAAsBC,GAAtB,CAA0BJ,SAA1B,EAD8B,CAE9B;AACH;;AACD,aAAO,IAAP,CALe,CAKH;AACf,KAPE;AAQHK,IAAAA,IARG,gBAQEC,QARF,EAQW;AACV,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,QAAQ,CAACO,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,YAAMO,SAAS,GAAGV,KAAK,CAACW,IAAN,CAAWd,QAAQ,CAACM,CAAD,CAAR,CAAYJ,gBAAZ,CAA6BS,QAA7B,CAAX,CAAlB,CADsC,CAEtC;;AACAC,QAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAaF,SAAb,CAAR;AACH;;AACD,UAAMG,MAAM,GAAGlB,MAAM,CAACc,KAAD,CAArB;AACA,aAAOI,MAAP;AACH;AAjBE,GAAP;AAmBH,CA1BD","file":"jquery.7a6e0748.js","sourceRoot":"../src","sourcesContent":["const log = console.log.bind(console)\n\nwindow.jQuery = function (selectorOrArray) {\n    let elements\n    if(typeof selectorOrArray === 'string'){\n        elements = document.querySelectorAll(selectorOrArray)\n    } else if(selectorOrArray instanceof Array){\n        elements = selectorOrArray\n    }\n    return {\n        addClass(className){\n            for(let i=0;i<elements.length;i++){\n                elements[i].classList.add(className)\n                // 用闭包来维持函数（elements - addClass）\n            }\n            return this // return 的对象就是调用函数里面的 this\n        },\n        find(selector){\n            let array = []\n            for (let i = 0; i < elements.length; i++) {\n                const elements2 = Array.from(elements[i].querySelectorAll(selector))\n                // 不变下面连接结果就不是真正的数组了\n                array = array.concat(elements2)\n            }\n            const newApi = jQuery(array)\n            return newApi\n        }\n    }\n}"]}